<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Stripe\Stripe;
use Stripe\Charge;

class StripePaymentController extends Controller
{

    public function showForm()
{
    return view('payment/form');
}

    public function pay(Request $request)
    {
        // Validate the incoming request
        $request->validate([
            'stripeToken' => 'required',
            'email' => 'required|email',
            'amount' => 'required|numeric|min:0.01',
        ]);

        try {
            // Set Stripe API key
            Stripe::setApiKey(env('STRIPE_SECRET_KEY'));

            // Create a charge
            $charge = Charge::create([
                'amount' => $request->amount * 100, // Convert to cents
                'currency' => env('STRIPE_CURRENCY'),
                'source' => $request->stripeToken, // The token generated by Stripe
                'description' => 'Payment from ' . $request->email,
            ]);

            // Store payment information in the database
            StripePayment::create([
                'payment_id' => $charge->id,
                'payer_email' => $request->email,
                'amount' => $request->amount,
                'currency' => env('STRIPE_CURRENCY'),
                'payment_status' => $charge->status,
            ]);

            // Return success view
            return view('payment_success', [
                'transactionId' => $charge->id,
                'paymentMethod' => 'stripe',
            ]);

        } catch (\Exception $e) {
            // Handle errors and return error view
            return view('payment_error', [
                'message' => $e->getMessage(),
            ]);
        }
    }
}
